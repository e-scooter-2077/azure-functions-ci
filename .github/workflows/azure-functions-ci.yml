name: Azure Function Continuous Integration

on:
  workflow_call:
    inputs:
      release-prefix:
        type: string
        required: true
      project-name:
        type: string
        required: true
      azure-functionapp-name:
        type: string
        required: false
      output-dir:
        type: string
        required: false
        default: publish
    secrets:
      azure-credentials:
        required: false

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    outputs:
      version: ${{ steps.semver.outputs.version }}
      should-release: ${{ steps.semver.outputs.should-release }}
      is-prerelease: ${{ steps.semver.outputs.is-github-prerelease }}
      should-deploy: ${{ inputs.azure-functionapp-name != '' }}
    steps:
      - id: semver
        name: Checkout
        uses: EasyDesk/action-semver-checkout@v1
#       - name: Setup .NET Core 3 SDK
#         uses: actions/setup-dotnet@v1
#         with:
#           dotnet-version: 3.x
      - name: Setup .NET 6 SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.x
      - name: Build sources
        uses: EasyDesk/action-dotnet-build@v1
        with:
          warnings-as-errors: true
          build-args: '-p:ContinuousIntegrationBuild=true'
      - name: Test
        uses: EasyDesk/action-dotnet-test@v1
        #with:
          #test-args: -p:CollectCoverage=true -p:CoverletOutputFormat=opencover -p:CoverletOutput='./coverage/' -p:DeterministicReport=true
      - name: Publish
        uses: EasyDesk/action-dotnet-publish@v1
        with:
          output-dir: ${{ inputs.output-dir }}
          path: ${{ inputs.project-name }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: ${{ inputs.output-dir }}
  release:
    name: GitHub Release
    runs-on: ubuntu-20.04
    needs: [build]
    if: needs.build.outputs.should-release == 'true'
    concurrency: release
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: build-artifacts
      - name: Zip build assets
        run: zip -r assets ./*
      - name: Release
        uses: EasyDesk/action-semver-release@v1
        with:
          version: ${{ needs.build.outputs.version }}
          prerelease: ${{ needs.build.outputs.is-prerelease }}
          files: |
            assets.zip
  deploy:
    name: Deploy to Azure Function App
    runs-on: ubuntu-20.04
    needs: [build, release]
    if: needs.build.outputs.should-deploy == 'true'
    concurrency: deploy
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: build-artifacts
#       - name: Setup .NET Core 3 SDK
#         uses: actions/setup-dotnet@v1
#         with:
#           dotnet-version: 3.x
      - name: Setup .NET 6 SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.x
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.azure-credentials }}
      - name: Deploy to Function App
        uses: Azure/functions-action@v1
        with:
          package: .
          app-name: ${{ inputs.azure-functionapp-name }}
  
  analyze:
    name: Analyze code with CodeQL
    runs-on: ubuntu-latest
    continue-on-error: true
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: csharp
        queries: security-and-quality
#     - name: Setup .NET Core 3 SDK
#       uses: actions/setup-dotnet@v1
#       with:
#         dotnet-version: 3.x
    - name: Setup .NET 6 SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.x
    - name: Build sources
      uses: EasyDesk/action-dotnet-build@v1
      with:
        warnings-as-errors: true
        build-args: '-p:ContinuousIntegrationBuild=true -p:UseSharedCompilation=false'
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
